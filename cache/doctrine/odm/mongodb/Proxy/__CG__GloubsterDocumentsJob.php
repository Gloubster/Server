<?php

namespace DoctrineMongoDBProxy\__CG__\Gloubster\Documents;

use Doctrine\ODM\MongoDB\Persisters\DocumentPersister;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ODM. DO NOT EDIT THIS FILE.
 */
class Job extends \Gloubster\Documents\Job implements \Doctrine\ODM\MongoDB\Proxy\Proxy
{
    private $__documentPersister__;
    public $__identifier__;
    public $__isInitialized__ = false;
    public function __construct(DocumentPersister $documentPersister, $identifier)
    {
        $this->__documentPersister__ = $documentPersister;
        $this->__identifier__ = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->__documentPersister__) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->__documentPersister__->load($this->__identifier__, $this) === null) {
                throw \Doctrine\ODM\MongoDB\DocumentNotFoundException::documentNotFound(get_class($this), $this->__identifier__);
            }
            unset($this->__documentPersister__, $this->__identifier__);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return $this->__identifier__;
        }
        $this->__load();
        return parent::getId();
    }

    public function setError($error)
    {
        $this->__load();
        return parent::setError($error);
    }

    public function getError()
    {
        $this->__load();
        return parent::getError();
    }

    public function setWorkerId($workerId)
    {
        $this->__load();
        return parent::setWorkerId($workerId);
    }

    public function getWorkerId()
    {
        $this->__load();
        return parent::getWorkerId();
    }

    public function setBeginning($beginning)
    {
        $this->__load();
        return parent::setBeginning($beginning);
    }

    public function getBeginning()
    {
        $this->__load();
        return parent::getBeginning();
    }

    public function setEnd($end)
    {
        $this->__load();
        return parent::setEnd($end);
    }

    public function getEnd()
    {
        $this->__load();
        return parent::getEnd();
    }

    public function setDelivery($delivery)
    {
        $this->__load();
        return parent::setDelivery($delivery);
    }

    public function getDelivery()
    {
        $this->__load();
        return parent::getDelivery();
    }

    public function setDeliveryId($deliveryId)
    {
        $this->__load();
        return parent::setDeliveryId($deliveryId);
    }

    public function getDeliveryId()
    {
        $this->__load();
        return parent::getDeliveryId();
    }

    public function setProcessDuration($processDuration)
    {
        $this->__load();
        return parent::setProcessDuration($processDuration);
    }

    public function getProcessDuration()
    {
        $this->__load();
        return parent::getProcessDuration();
    }

    public function setDeliveryDuration($deliveryDuration)
    {
        $this->__load();
        return parent::setDeliveryDuration($deliveryDuration);
    }

    public function getDeliveryDuration()
    {
        $this->__load();
        return parent::getDeliveryDuration();
    }

    public function setRoutingKey($routingKey)
    {
        $this->__load();
        return parent::setRoutingKey($routingKey);
    }

    public function getRoutingKey()
    {
        $this->__load();
        return parent::getRoutingKey();
    }

    public function setExchangeName($exchangeName)
    {
        $this->__load();
        return parent::setExchangeName($exchangeName);
    }

    public function getExchangeName()
    {
        $this->__load();
        return parent::getExchangeName();
    }

    public function setErrorMessage($errorMessage)
    {
        $this->__load();
        return parent::setErrorMessage($errorMessage);
    }

    public function getErrorMessage()
    {
        $this->__load();
        return parent::getErrorMessage();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'error', 'errorMessage', 'workerId', 'beginning', 'end', 'delivery', 'deliveryId', 'processDuration', 'deliveryDuration', 'routingKey', 'exchangeName');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->__documentPersister__) {
            $this->__isInitialized__ = true;
            $class = $this->__documentPersister__->getClassMetadata();
            $original = $this->__documentPersister__->load($this->__identifier__);
            if ($original === null) {
                throw \Doctrine\ODM\MongoDB\MongoDBException::documentNotFound(get_class($this), $this->__identifier__);
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->__documentPersister__, $this->__identifier__);
        }
        
    }
}